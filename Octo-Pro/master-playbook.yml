---
- hosts: master
  become: true
  tasks:
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Get the latest stable version
      shell: lsb_release -cs
      register: stable_version

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ stable_version }} stable
        state: present

    - name: Install docker and its dependecies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      notify:
        - docker status

    - name: Add "{{ ansible_user }}" current user to docker group
      user:
        name: "{{ ansible_user}}"
        group: docker

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
          - swap
          - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-{{ stable_version }} main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
    
    - name: Get the host part of the IP 
      shell: host {{ ansible_fqdn }} | awk '{print $4}' 
      register: node_ip

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip.stdout.split('.')[3] }}

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --node-name k8s-master --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=All

    - name: Setup kubeconfig for running user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/{{ ansible_user }}/.kube
        - cp -i /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config
        - chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config
        
    - name: Install calico pod network
      become: false
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  handlers:
    - name: docker status
      service: name=docker state=started
